#logistic regression code

#import libraries
from sklearn.datasets import make_classification
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import(accuracy_score,precision_score,recall_score,f1_score,confusion_matrix,roc_curve,roc_auc_score)
import matplotlib.pyplot as plt
import seaborn as sns
#Create binary classification dataset
x,y=make_classification(n_samples=1000,n_classes=2,random_state=42)
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=42)
#train logistic regression model
model=LogisticRegression()
model.fit(x_train,y_train)
#predict class labels
y_pred=model.predict(x_test)
#predict probabilities for class 1(needed for ROC curve)
y_probs=model.predict_proba(x_test)[:,1]
#confusion matrix
cm=confusion_matrix(y_test,y_pred)
sns.heatmap(cm,annot=True,fmt='d',cmap='Blues')
plt.title("Confusion matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()


#--Logistic regression performance metrics--
print("Accuracy:",accuracy_score(y_test,y_pred))
print("Precision:",precision_score(y_test,y_pred))
print("Recall:",recall_score(y_test,y_pred))
print("F1 Score:",f1_score(y_test,y_pred))
print("ROC AUC Score:",roc_auc_score(y_test,y_probs))
