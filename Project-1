# Mini Capstone: Predict student scores
This notebook demonstrates how to build a simple linear regression model to predict student scores based on hours studied

#step 1 : Import libraries

import pandas as pd 
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split  
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error,r2_score

#step 2: Load dataset
url="https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
df=pd.read_csv(url)
df.head()

#step 3: Visualize data
plt.scatter(df['Hours'],df['Scores'])
plt.title("Hours vs Scores")
plt.xlabel("Hours studied")
plt.ylabel("Score")
plt.grid(True)
plt.show()

#step 4: Prepare Data
x=df[["Hours"]]
y=df["Scores"]

#step 5:Train/Test Split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

#step 6:Train Linear regression Model
model=LinearRegression()
model.fit(x_train,y_train)

#step 7:predict
y_pred=model.predict(x_test)

#step 8: Evaluate Model
print("R^2 score:",r2_score(y_test,y_pred))#accuracy
print("Mean absolute Error:",mean_absolute_error(y_test,y_pred))#error 

#step 9:Visualize Regression Line
plt.scatter(x,y,color="blue")
plt.plot(x,model.predict(x),color="red") #regression line
plt.title("regression line-student scores")
plt.xlabel("Hours studied")
plt.ylabel("score")
plt.show()

#step 10: predict for custom input
hours=[[9.25]]
predicted_score=model.predict(hours)
print(f"predicted score for studying {hours[0][0]} scores={predicted_score[0]:.2f}")
